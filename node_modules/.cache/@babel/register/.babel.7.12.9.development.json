{
  "{\"sourceRoot\":\"/Users/marjaanatienaho/Technigo/FinalProject-backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/marjaanatienaho/Technigo/FinalProject-backend\",\"filename\":\"/Users/marjaanatienaho/Technigo/FinalProject-backend/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/marjaanatienaho/Technigo/FinalProject-backend\",\"plugins\":[],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/marjaanatienaho/Technigo/FinalProject-backend/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/marjaanatienaho/Technigo/FinalProject-backend",
      "filename": "/Users/marjaanatienaho/Technigo/FinalProject-backend/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/marjaanatienaho/Technigo/FinalProject-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/marjaanatienaho/Technigo/FinalProject-backend/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/marjaanatienaho/Technigo/FinalProject-backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/marjaanatienaho/Technigo/FinalProject-backend/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors'; // If you're using one of our datasets, uncomment the appropriate import below\n// to get started!\n// \n// import goldenGlobesData from './data/golden-globes.json'\n// import avocadoSalesData from './data/avocado-sales.json'\n// import booksData from './data/books.json'\n// import netflixData from './data/netflix-titles.json'\n// import topMusicData from './data/top-music.json'\n// Defines the port the app will run on. Defaults to 8080, but can be \n// overridden when starting the server. For example:\n//\n//   PORT=9000 npm start\n\nconst port = process.env.PORT || 8080;\nconst app = express(); // Add middlewares to enable cors and json body parsing\n\napp.use(cors());\napp.use(bodyParser.json()); // Start defining your routes here\n\napp.get('/', (req, res) => {\n  res.send('Hello world');\n}); // Start the server\n\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwiYm9keVBhcnNlciIsImNvcnMiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJhcHAiLCJ1c2UiLCJqc29uIiwiZ2V0IiwicmVxIiwicmVzIiwic2VuZCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLE9BQVAsTUFBb0IsU0FBcEI7QUFDQSxPQUFPQyxVQUFQLE1BQXVCLGFBQXZCO0FBQ0EsT0FBT0MsSUFBUCxNQUFpQixNQUFqQixDLENBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUNBLE1BQU1DLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBakM7QUFDQSxNQUFNQyxHQUFHLEdBQUdQLE9BQU8sRUFBbkIsQyxDQUVBOztBQUNBTyxHQUFHLENBQUNDLEdBQUosQ0FBUU4sSUFBSSxFQUFaO0FBQ0FLLEdBQUcsQ0FBQ0MsR0FBSixDQUFRUCxVQUFVLENBQUNRLElBQVgsRUFBUixFLENBRUE7O0FBQ0FGLEdBQUcsQ0FBQ0csR0FBSixDQUFRLEdBQVIsRUFBYSxDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUN6QkEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVMsYUFBVDtBQUNELENBRkQsRSxDQUlBOztBQUNBTixHQUFHLENBQUNPLE1BQUosQ0FBV1gsSUFBWCxFQUFpQixNQUFNO0FBQ3JCWSxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBYSxzQ0FBcUNiLElBQUssRUFBdkQ7QUFDRCxDQUZEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9tYXJqYWFuYXRpZW5haG8vVGVjaG5pZ28vRmluYWxQcm9qZWN0LWJhY2tlbmQvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcydcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJ1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycydcblxuLy8gSWYgeW91J3JlIHVzaW5nIG9uZSBvZiBvdXIgZGF0YXNldHMsIHVuY29tbWVudCB0aGUgYXBwcm9wcmlhdGUgaW1wb3J0IGJlbG93XG4vLyB0byBnZXQgc3RhcnRlZCFcbi8vIFxuLy8gaW1wb3J0IGdvbGRlbkdsb2Jlc0RhdGEgZnJvbSAnLi9kYXRhL2dvbGRlbi1nbG9iZXMuanNvbidcbi8vIGltcG9ydCBhdm9jYWRvU2FsZXNEYXRhIGZyb20gJy4vZGF0YS9hdm9jYWRvLXNhbGVzLmpzb24nXG4vLyBpbXBvcnQgYm9va3NEYXRhIGZyb20gJy4vZGF0YS9ib29rcy5qc29uJ1xuLy8gaW1wb3J0IG5ldGZsaXhEYXRhIGZyb20gJy4vZGF0YS9uZXRmbGl4LXRpdGxlcy5qc29uJ1xuLy8gaW1wb3J0IHRvcE11c2ljRGF0YSBmcm9tICcuL2RhdGEvdG9wLW11c2ljLmpzb24nXG5cbi8vIERlZmluZXMgdGhlIHBvcnQgdGhlIGFwcCB3aWxsIHJ1biBvbi4gRGVmYXVsdHMgdG8gODA4MCwgYnV0IGNhbiBiZSBcbi8vIG92ZXJyaWRkZW4gd2hlbiBzdGFydGluZyB0aGUgc2VydmVyLiBGb3IgZXhhbXBsZTpcbi8vXG4vLyAgIFBPUlQ9OTAwMCBucG0gc3RhcnRcbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDgwODBcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxuXG4vLyBBZGQgbWlkZGxld2FyZXMgdG8gZW5hYmxlIGNvcnMgYW5kIGpzb24gYm9keSBwYXJzaW5nXG5hcHAudXNlKGNvcnMoKSlcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpXG5cbi8vIFN0YXJ0IGRlZmluaW5nIHlvdXIgcm91dGVzIGhlcmVcbmFwcC5nZXQoJy8nLCAocmVxLCByZXMpID0+IHtcbiAgcmVzLnNlbmQoJ0hlbGxvIHdvcmxkJylcbn0pXG5cbi8vIFN0YXJ0IHRoZSBzZXJ2ZXJcbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhgU2VydmVyIHJ1bm5pbmcgb24gaHR0cDovL2xvY2FsaG9zdDoke3BvcnR9YClcbn0pXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "bodyParser",
        "cors",
        "port",
        "process",
        "env",
        "PORT",
        "app",
        "use",
        "json",
        "get",
        "req",
        "res",
        "send",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,MAAMC,GAAG,GAAGP,OAAO,EAAnB,C,CAEA;;AACAO,GAAG,CAACC,GAAJ,CAAQN,IAAI,EAAZ;AACAK,GAAG,CAACC,GAAJ,CAAQP,UAAU,CAACQ,IAAX,EAAR,E,CAEA;;AACAF,GAAG,CAACG,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,aAAT;AACD,CAFD,E,CAIA;;AACAN,GAAG,CAACO,MAAJ,CAAWX,IAAX,EAAiB,MAAM;AACrBY,EAAAA,OAAO,CAACC,GAAR,CAAa,sCAAqCb,IAAK,EAAvD;AACD,CAFD",
      "sourceRoot": "/Users/marjaanatienaho/Technigo/FinalProject-backend/",
      "sourcesContent": [
        "import express from 'express'\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\n\n// If you're using one of our datasets, uncomment the appropriate import below\n// to get started!\n// \n// import goldenGlobesData from './data/golden-globes.json'\n// import avocadoSalesData from './data/avocado-sales.json'\n// import booksData from './data/books.json'\n// import netflixData from './data/netflix-titles.json'\n// import topMusicData from './data/top-music.json'\n\n// Defines the port the app will run on. Defaults to 8080, but can be \n// overridden when starting the server. For example:\n//\n//   PORT=9000 npm start\nconst port = process.env.PORT || 8080\nconst app = express()\n\n// Add middlewares to enable cors and json body parsing\napp.use(cors())\napp.use(bodyParser.json())\n\n// Start defining your routes here\napp.get('/', (req, res) => {\n  res.send('Hello world')\n})\n\n// Start the server\napp.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`)\n})\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1607166338000
  }
}